let express,graphqlHTTP,resolvers,schema;_8a1‍.x([["default",()=>_8a1‍.o]]);_8a1‍.w("express",[["default",["express"],function(v){express=v}]]);_8a1‍.w("express-graphql",[["default",["graphqlHTTP"],function(v){graphqlHTTP=v}]]);_8a1‍.w("./graphql/resolvers",[["default",["resolvers"],function(v){resolvers=v}]]);_8a1‍.w("./graphql/schema",[["default",["schema"],function(v){schema=v}]]);







const app = express();
app.use(express.json());

// const deleteMov = (request, response) => {
//     const { id } = request.params || {};
//     deleteMovie(id);
//     response.json({ success: true });
// };
// app.get('/api/delete/:id', deleteMov);
//
// const movieCount = async (request, response) => {
//
//     const count = await getMovieCount();
//     response.json({"count":count});
// };
// app.get('/api/count/', movieCount);
//
// app.use(express.json());
// const addPlatform = async (request, response) => {
//     console.log(request.body);
//
//     const relation = request.body;
//     relation.created_on = new Date();
//     const record = await addRelation(relation);
//     console.log(record);
//     response.json(record);
// };
// app.post('/api/addRelation', addPlatform);
//
// app.use(express.json());
// const update = async (request, response) => {
//     console.log("At app.js" + request.body);
//
//     const content = request.body;
//     content.created_on = new Date();
//     await updateDesc(content);
//     response.json({ success: true });
// };
// app.post('/api/updateDesc', update);
//
// app.use(express.json());
// const movieAvailable = async (request, response) => {
//     console.log("movieAvailable, body: " + request.body);
//
//     const content = request.body;
//     const result = await checkAvailable(content['title']);
//     // console.log(result);
//     response.json(result); // Result array of object as format [{'title': 'platform'}, {'title': 'platform'}]
// };
// app.post('/api/movieAvailable', movieAvailable);


app.use('/api/graphql', graphqlHTTP({
    schema,
    rootValue: resolvers,
    graphiql: true,
}));


const staticRoute = express.static('static');
app.use('/static', staticRoute);
app.use('/', staticRoute);

_8a1‍.d(app);